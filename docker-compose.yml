version: '3.9'

services:
  api:
    container_name: tickets_api
    depends_on:
      database:
        condition: service_healthy
    build:
      context: .
    env_file:
      - .env
    volumes:
      - "${PWD}:/opt/app"
    ports:
      - "9600:9600"
    networks:
      - internal-net

  database:
    platform: linux/amd64
    image: postgis/postgis:13-3.3-alpine
    restart: on-failure
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - ./docker_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "9630:5432"
    networks:
      - internal-net

  redis:
    image: redis:latest
    restart: always
    volumes:
      - ./setup/docker/redis-data:/data
    networks:
      - internal-net
    command: redis-server

  worker:
    build: .
    volumes:
      - .:/app
    env_file: .env
    restart: on-failure
    command: celery -A tickets worker --concurrency=2 -l info
    networks:
      - internal-net

volumes:
  docker_data:


networks:
  redis_network:
  internal-net:
    name: backend_network
